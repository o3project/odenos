This file describes:

  - how to configure eclipse for development ODENOS

1. Install eclipse

2. Download ODENOS

 $ cd (your-work-directory)
 $ git clone (ODENOS git repository)
 $ mvn eclipse:eclipse

3. Run eclipse

Please specify your favourite workspace :-)

4. Configure eclipse to debug apps/java/sample_controller

 4.1. Select "Window" > "Open Perspective" ( > "Other") > "Git"
   * Click "Add an existing local Git repository"
   * Fill (your-work-directory) in Directory field, then click "Search" button
   * Confirm (your-repository) is checked, then click "Finish"

 4.2. Select "File" > "Import" > "General" > "Existing Projects into Workspace", and click "Next"
   * Fill (your-work-direcotry) in "Select root directory" field
   * Then click "Finish"

 4.3. Select "Help" > "Install New Software"
   * Then add PyDev site by clicking "Add" button
   * Fill Name with "PyDev" (or whatever)
   * Fill Location with "http://pydev.org/updates/", then click "OK"
   * Check "PyDev for Eclipse", and uncheck "Contact all updates sites during install to find required software", then click "Next"
   * Click "Next" and accept aggreement, then click "Finish"
   * Check "Brainway Software"'s certificate, and click yes when you asked
   * Then click "Yes" if asked to restart the eclipse

 4.4. Select "Window" > "Open Perspective" ( > "Other") > "Java"

 4.5. Select "Window" > "Preferences" > "Java" > "BuildPath" > "Classpath Variable" > "New"
   * Then add variable Name "M2_REPO" with Path "(Home)/.m2/repository", and click "OK"
   * Click yes if you asked rebuild.

 4.6. In Package Explorer, "src/main/java/" > "org.o3project.odenos.core"
   * Click "Odenos.java" with right, select "Debug As" and click "Debug Configurations"
   * Click "Java Application" with right, select "New"
   * Switch to Arguments tab, fill followings to Program arguments:
     -s
   * Switch to Arguments tab, fill followings to VM arguments:
     -Dlog4j.configurationFile=file:etc/log4j2_java.yaml -Dlog4j2_app.log=var/log/odenos_system.log
   * Click "Debug", then select "Window" > "Open Perspective" > "Debug", then check that Odenos application is running.

 4.7. In Package Explorer, "src/main/java/" > "org.o3project.odenos.core"
   * Click "Odenos.java" with right, select "Debug As" and click "Debug Configurations"
   * Fill "romgr1" to "Name" field
   * Switch to Arguments tab, fill followings to Program arguments:
     -r romgr1 -d apps/java/sample_components/target/classes
   * Switch to Arguments tab, fill followings to VM arguments:
     -Dlog4j.configurationFile=file:etc/log4j2_java.yaml -Dlog4j2_app.log=var/log/odenos_romgr1.log

 4.8. Select "Window" > "Open Perspective" > "PyDev"
   * Click <repository> with right, select "PyDev" > "Set as PyDev Project"
   * Click "Quick Auto-Config" if you asked Python interpreter

 4.9. In PyDev Package Exploerer, expand <repository> > "src" > "main"
   * Click "python" with right, select "PyDev" > "Set as Source Folder (add to PHTHONPATH)"

 4.10. In PyDev perspective, expand <repository> > "src" > "main" > "python" > "org" > "o3project" > "odenos" > "core" 
   * Click "odenos.py" with right, select "Debug As" > "Debug Configurations"
   * Click "Python Run" with right, select "New"
   * Fill "romgr2" to "Name" field
   * Fill <repository> to "Project" field
   * Click "Browse" button in "Main Module", select /src/main/python/org/o3project/odenos/core/odenos.py, then click "OK"
   * Change to Environment tab, click "New" button
   * Fill "LOGGING_CONF" to Name field
   * Fill "${project_loc}/etc/log_python.conf" to Value field, then click "OK"
   * Switch to Arguments tab, fill followings to Program arguments:
     -r romgr2 -d apps/python/sample_components
   * Fill Working directory: Other: ${project_loc:odenos}
   * Click "Debug" to run romgr2
   * Change to Debug perspective and confirm the program is running

Once above debug-configurations are finished, you can run these programs by "Run" > "Run History" or "Run" > "Debug History".

5. Coding style

https://code.google.com/p/google-styleguide/
http://checkstyle.sourceforge.net/

 5.1. Select "Help" > "Install New Software",
 5.2. Click "Add"
   * Fill "CheckStyle" to Name field
   * Fill "http://eclipse-cs.sourceforge.net/update/" to Location field, then click "OK"
 5.3. Check "Eclipse CheckStyle Plug-in", then click "Next"
 5.4. Click "Next", and check "accept" and click "Finish"
 5.5. Click "OK" if you asked to notify no-signature, then click "Yes" to restart eclipse
 5.6. Select "Window" > "Preferences" > "Checkstyle"
   * Select "Google Checks" in "Global Check Configurations", click "Set as Default" and "OK"
 5.7. Select "Window" > "Preferences" > "Java" > "Code Style" > "Formatter"
   * Click "import" button, select etc/odenos_format.xml, then click "OK" and click "Apply"
   * Change to "Organize Imports"
   * Click "import" button, select etc/odenos.importorder, then click "OK" and click "Apply"

 - Java

http://google-styleguide.googlecode.com/svn/trunk/javaguide.html
https://github.com/checkstyle/checkstyle/blob/master/google_checks.xml

 - Python

http://google-styleguide.googlecode.com/svn/trunk/pyguide.html

